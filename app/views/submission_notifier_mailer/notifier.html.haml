!!!
%html
  %head
    %meta{content: "text/html; charset=UTF-8", "http-equiv": "Content-Type"}
    %title #{@alert.subject}
    %link{href: "https://fonts.googleapis.com/css?family=Roboto+Condensed", rel: "stylesheet"}
    :css
      body  {
        font-family: 'Roboto Condensed', sans-serif;
        color: #767676;
      }
      .wrapper {
        padding: 5px;
        background-color: #F1F1F1;
        border-radius: 3px;
        width: 50%;
        margin-bottom: 10px;
      }
      .separator {
        margin-top: 25px;
        margin-bottom: 25px;
        border: 0;
        border-top: 3px solid #6d26ff;
      }
      .wrapper p {
        color: #f72969;
      }
      .panel-piled {
        position: relative;
        margin-top: 20px;
        margin-bottom: 20px;
        left: 10%;
        width: 50%;
        background: #fff;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.3);
        padding: 24px;
      }

  %body
    .panel-piled
      = image_tag "logo.png", width: 200

      %h3
        = @alert.survey.name

      %p
        = @alert.body

      - @notifications.each do |answer|
        %h4
          = answer.question.title

        - if answer.question.question_type == "image"
          #{answer.submission.sender} #{t("app.has_selected")} #{answer.answer_image.image.name}
        - elsif answer.question.question_type == "rating"
          .wrapper
            - answer.answer_raitings.each do |rate|
              - unless rate.response.nil?
                - @alert.alert_filters.each do |f|
                  - if rate.raiting == f.raiting && f.answer.split(",").map(&:to_i).include?(rate.response)
                    %p
                      #{rate.raiting.name}:
                      - 1.upto(rate.response) do |star|
                        &#x2605;
        - elsif answer.question.question_type == "single"
          #{answer.submission.sender} #{t("app.has_selected")}
          #{answer.choice_answer.choice.title}
        - elsif answer.question.question_type == "list"
          #{answer.submission.sender} #{t("app.has_selected")}
          #{answer.choice_answer.choice.title}
        - elsif answer.question.question_type == "multiple"
          #{answer.submission.sender} #{t("app.has_selected")}
          #{answer.answer_multiple.choices.map(&:title).join(', ')}
        - else
          #{answer.submission.sender} #{t("app.has_answered")}
          #{answer.answer_open.response}

        %hr.separator
