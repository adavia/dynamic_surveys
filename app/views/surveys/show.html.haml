- content_for :sub_nav do
  .col-md-5
    %h1
      = t("app.survey.show.subnav")
      %small
        (#{@survey.name})
  .col-md-3
    %ul.list-inline
      %li
        = link_to t("app.survey.show.survey_submit"), [:new, @survey, :submission],
          class: "btn btn-sm btn-primary"
      %li
        = link_to "#{@customer.surveys_count} #{Survey.human_attribute_name(:class_name).downcase} total", [@customer, :surveys]

.container
  .row
    .col-md-10.col-md-offset-1
      .panel-piled
        .dropdown.pull-right
          .dropdown-toggle{"aria-expanded": "false", "aria-haspopup": "true",
          "data-toggle": "dropdown", href: "#", role: "button"}
            = fa_icon "chevron-down"
          %ul.dropdown-menu
            %li
              = link_to t("app.survey.show.links.survey_preview"),
                [:preview, @customer, @survey], target: "_blank"
            %li
              = link_to t("app.survey.show.survey_export"),
                survey_submissions_path(@survey, format: "csv")
            %li
              = link_to t("app.survey.show.links.survey_submit"), [:new, @survey, :submission]
            %li
              = link_to t("app.survey.show.links.survey_list"), [@customer, :surveys]
            - if policy(@survey).update?
              %li
                = link_to t("app.survey.show.links.survey_edit"), [:edit, @customer, @survey]
            /%li
            /= link_to t("app.survey.show.links.survey_pdf"),
            /customer_survey_path(@customer, @survey, format: :pdf)
            - if policy(@survey).archive?
              %li
                = link_to t("app.survey.index.links.survey_archive"),
                  [:archive, @customer, @survey], method: :patch,
                  data: { confirm: t("app.survey.index.links.archive_alert") }

        %h1
          = @survey.name
        %p
          = @survey.description

        .submission-search
          %h4= t("app.survey.report.filter_data")
          = form_tag(customer_survey_path(@customer, @survey), method: "get", remote: true) do
            .form-group
              = text_field_tag :created_after, params[:created_after],
                placeholder: t("app.submission.index.search_start_date"),
                class: "form-control input-sm", data: { behavior: "date-picker" }
            .form-group
              = text_field_tag :created_before, params[:created_before],
                placeholder: t("app.submission.index.search_end_date"),
                class: "form-control input-sm", data: { behavior: "date-picker" }
            .form-group
              = select_tag :question_id,
                options_for_select(@survey.questions.collect {|q| [q.title, q.id, {"data-type": q.question_type}]}),
                prompt: t("app.submission.index.search_question"),
                data: { behavior: "questions_select" },
                class: "form-control input-sm"

            .form-group#select-content
            = submit_tag t("app.search"), class: "btn btn-default btn-block btn-sm",
              data: { disable_with: t("app.submission.index.search_button_load")}

        %ul.list-group.m-t-1.m-b-0
          %li.list-group-item.data-stats
            = render "stats"

        %hr.separator
        /- @trans_keys = @survey.questions.unscope(:order).group_types.transform_keys do |key|
        /- t("app.question.question_types.#{key}").capitalize
        /- if @trans_keys.any?
        /= pie_chart @trans_keys, library: { pieSliceText: "value-and-percentage" }

        = render @survey.questions

:css
  body  { background: url("/assets/bg_survey.png") no-repeat center center fixed;
          -webkit-background-size: cover;
          -moz-background-size: cover;
          -o-background-size: cover;
          background-size: cover;
        }


